var EmberParseAdapter={};EmberParseAdapter.Transforms={},EmberParseAdapter.Serializer=DS.RESTSerializer.extend({primaryKey:"objectId",extractArray:function(e,r,t){var a={};return a[Ember.String.pluralize(r.modelName)]=t.results,this._super(e,r,a)},extractSingle:function(e,r,t,a){var n={};return n[r.modelName]=t,this._super(e,r,n,a)},modelNameFromPayloadKey:function(e){return Ember.String.dasherize(Ember.String.singularize(e))},extract:function(e,r,t,a,n){return null===a||"updateRecord"!==n&&"deleteRecord"!==n||(t[this.get("primaryKey")]=a),this._super(e,r,t,a,n)},extractMeta:function(e,r,t){t&&t.count&&(e.setMetadataFor(r,{count:t.count}),delete t.count)},normalizeAttributes:function(e,r){e.eachAttribute(function(e,t){"date"===t.type&&"object"===Ember.typeOf(r[e])&&r[e].iso&&(r[e]=r[e].iso)}),this._super(e,r)},normalizeRelationships:function(e,r){var t=this.get("store"),a=this;e.eachRelationship(function(e,n){var i=n.options;r[e]&&"belongsTo"===n.kind&&("Pointer"===r[e].__type?r[e]=r[e].objectId:"Object"===r[e].__type?(delete r[e].__type,delete r[e].className,r[e].type=n.type,a.normalize(n.type,r[e]),t.push(n.type,r[e])):delete r[e]),r[e]&&"hasMany"===n.kind&&(i.relation&&(r[e]=[],r.links||(r.links={}),r.links[e]=JSON.stringify({modelName:n.type.modelName,key:e,load:Ember.isNone(i.load)||i.load})),i.array&&r[e].length&&r[e]&&r[e].forEach(function(e,r,i){"Pointer"===e.__type?i[r]=e.objectId:(delete e.__type,delete e.className,e.type=n.type,a.normalize(n.type,e),t.push(n.type,e))}))},this),this._super(e,r)},serializeIntoHash:function(e,r,t,a){Ember.merge(e,this.serialize(t,a))},serializeAttribute:function(e,r,t,a){"createdAt"===t||"updatedAt"===t||"emailVerified"===t||"sessionToken"===t||"removed_"===t?delete r[t]:this._super(e,r,t,a)},serializeBelongsTo:function(e,r,t){var a=t.key,n=e.belongsTo(a),i=e.belongsTo(a,{id:!0});r[a]=Ember.isEmpty(i)?{__op:"Delete"}:{__type:"Pointer",className:this.parseClassName(n.modelName),objectId:i}},parseClassName:function(e){return"parse-user"===e?"_User":Ember.String.capitalize(Ember.String.camelize(e))},serializeHasMany:function(e,r,t){var a=t.key,n=e.hasMany(a),i=t.options;if(Ember.isEmpty(n))return i.relation||(r[a]=[]),void 0;var s,o,l=this.parseClassName(t.type.modelName);n.forEach(function(e){"removed_"in e.attributes()&&e.attr("removed_")?(e.record.set("removed_",!1),Ember.isEmpty(o)&&(o={__op:i.array?"Remove":"RemoveRelation",objects:[]}),o.objects.push({__type:"Pointer",className:l,objectId:e.id})):(Ember.isEmpty(s)&&(s={__op:i.relation?"AddRelation":"AddUnique",objects:[]}),s.objects.push({__type:"Pointer",className:l,objectId:e.id}))}),i.relation?s&&o?r[a]={__op:"Batch",ops:[s,o]}:(s||o)&&(r[a]=s||o):(s&&(r[a]=s),o&&(r[a]?r[a].deleteds=o:r[a]={deleteds:o}))}}),EmberParseAdapter.Adapter=DS.RESTAdapter.extend({defaultSerializer:"-parse",init:function(){this._super(),this.set("headers",{"X-Parse-Application-Id":this.get("applicationId"),"X-Parse-REST-API-Key":this.get("restApiId")})},host:"https://api.parse.com",namespace:"1",classesPath:"classes",pathForType:function(e){return"parse-user"===e?"users":"login"===e?"login":"logout"===e?"logout":"requestPasswordReset"===e?"requestPasswordReset":"function"===e?"functions":this.classesPath+"/"+this.parsePathForType(e)},parsePathForType:function(e){return Ember.String.capitalize(Ember.String.camelize(e))},createRecord:function(e,r,t){var a=this.serialize(t,{includeId:!0}),n=this;return new Ember.RSVP.Promise(function(e,t){n.ajax(n.buildURL(r.modelName),"POST",{data:a}).then(function(r){var t=Ember.merge(a,r);e(t)},function(e){t(e.responseJSON)})})},updateRecord:function(e,r,t){var a=this.serialize(t,{includeId:!0}),n={},i=!1,s=t.id,o=this;return"parseUser"===r.modelName&&delete a.password,r.eachRelationship(function(e){a[e]&&a[e].deleteds&&(n[e]=a[e].deleteds,delete a[e].deleteds,i=!0)}),new Ember.RSVP.Promise(function(e,t){i?o.ajax(o.buildURL(r.modelName,s),"PUT",{data:n}).then(function(){o.ajax(o.buildURL(r.modelName,s),"PUT",{data:a}).then(function(r){var t=Ember.merge(a,r);e(t)},function(e){t("Failed to save parent in relation: "+e.response.JSON)})},function(e){t(e.responseJSON)}):o.ajax(o.buildURL(r.modelName,s),"PUT",{data:a}).then(function(r){var t=Ember.merge(a,r);e(t)},function(e){t(e.responseJSON)})})},parseClassName:function(e){return"parse-user"===e?"_User":Ember.String.capitalize(Ember.String.camelize(e))},findHasMany:function(e,r,t){var a=JSON.parse(t);if(!a.load)return Ember.RSVP.Promise.resolve({results:""});var n={where:{$relatedTo:{object:{__type:"Pointer",className:this.parseClassName(r.modelName),objectId:r.id},key:a.key}}};return this.ajax(this.buildURL(a.modelName),"GET",{data:n})},findQuery:function(e,r,t){if(t.where)"string"!==Ember.typeOf(t.where)&&(t.where=JSON.stringify(t.where));else{var a=JSON.stringify(t);t={},t.where=a}return this._super(e,r,t)},sessionToken:Ember.computed("headers.X-Parse-Session-Token",function(e,r){return 2>arguments.length?this.get("headers.X-Parse-Session-Token"):(this.set("headers.X-Parse-Session-Token",r),r)})}),EmberParseAdapter.ParseUser=DS.Model.extend({username:DS.attr("string"),password:DS.attr("string"),email:DS.attr("string"),emailVerified:DS.attr("boolean"),sessionToken:DS.attr("string"),createdAt:DS.attr("date"),updatedAt:DS.attr("date")}),EmberParseAdapter.ParseUser.reopenClass({current:function(e){if(Ember.isEmpty(this.modelName))throw Error("ParseUser.current must be called on a model fetched via store.modelFor");var r=this,t=e.adapterFor(r),a=e.serializerFor(r);return t.ajax(t.buildURL("parse-user","me"),"GET",{}).then(function(t){return a.normalize(r,t),e.push(r,t)},function(e){return Ember.RSVP.reject(e.responseJSON)})},requestPasswordReset:function(e,r){var t=this,a=e.adapterFor(t),n={email:r};return a.ajax(a.buildURL("requestPasswordReset"),"POST",{data:n})["catch"](function(e){return Ember.RSVP.reject(e.responseJSON)})},login:function(e,r){if(Ember.isEmpty(this.modelName))throw Error("Parse login must be called on a model fetched via store.modelFor");var t=this,a=e.adapterFor(t),n=e.serializerFor(t);return a.ajax(a.buildURL("login"),"GET",{data:r}).then(function(r){n.normalize(t,r);var a=e.push(t,r);return a},function(e){return Ember.RSVP.reject(e.responseJSON)})},logout:function(e){if(Ember.isEmpty(this.modelName))throw Error("Parse login must be called on a model fetched via store.modelFor");var r=this,t=e.adapterFor(r);return e.serializerFor(r),t.ajax(t.buildURL("logout"),"POST")["catch"](function(e){return Ember.RSVP.reject(e.responseJSON)})},signup:function(e,r){if(Ember.isEmpty(this.modelName))throw Error("Parse signup must be called on a model fetched via store.modelFor");var t=this,a=e.adapterFor(t),n=e.serializerFor(t);return a.ajax(a.buildURL(t.modelName),"POST",{data:r}).then(function(a){n.normalize(t,a),a.email=a.email||r.email,a.username=a.username||r.username;var i=e.push(t,a);return i},function(e){return Ember.RSVP.reject(e.responseJSON)})}}),EmberParseAdapter.GeoPoint=Ember.Object.extend({latitude:Ember.computed(function(){return this._latitude}).readOnly(),longitude:Ember.computed(function(){return this._longitude}).readOnly(),init:function(e,r){this._latitude=e,this._longitude=r}}),EmberParseAdapter.File=Ember.Object.extend({name:Ember.computed(function(){return this._name}).readOnly(),url:Ember.computed(function(){return this._url}).readOnly(),init:function(e,r){this._name=e,this._url=r}}),EmberParseAdapter.ACL=Ember.Object.extend({}),EmberParseAdapter.Transforms.ACL=DS.Transform.extend({deserialize:function(e){return e?EmberParseAdapter.ACL.create(e):null},serialize:function(e){if(!e)return null;var r={};return Object.keys(e).forEach(function(t){r[t]=e.get(t)}),r}}),EmberParseAdapter.Transforms.GeoPoint=DS.Transform.extend({deserialize:function(e){return e?new EmberParseAdapter.GeoPoint(e.latitude,e.longitude):null},serialize:function(e){return e?{__type:"GeoPoint",latitude:e.get("latitude"),longitude:e.get("longitude")}:null}}),EmberParseAdapter.Transforms.File=DS.Transform.extend({deserialize:function(e){return e?new EmberParseAdapter.File(e.name,e.url):null},serialize:function(e){return e?{__type:"File",name:e.get("name"),url:e.get("url")}:null}}),EmberParseAdapter.Transforms.Date=DS.Transform.extend({deserialize:function(e){return e?new Date(e.iso):null},serialize:function(e){return e?{__type:"Date",iso:e.toISOString()}:null}}),EmberParseAdapter.setupContainer=function(e){e.register("adapter:-parse",EmberParseAdapter.Adapter),e.register("serializer:-parse",EmberParseAdapter.Serializer),e.register("model:parse-user",EmberParseAdapter.ParseUser),e.register("transform:parse-geo-point",EmberParseAdapter.Transforms.GeoPoint),e.register("transform:parse-file",EmberParseAdapter.Transforms.File),e.register("transform:parse-date",EmberParseAdapter.Transforms.Date),e.register("transform:parse-acl",EmberParseAdapter.Transforms.ACL)},Ember.onLoad("Ember.Application",function(e){e.initializer({after:"ember-data",name:"parse-adapter",initialize:function(e){EmberParseAdapter.setupContainer(e)}})});